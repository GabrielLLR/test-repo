name: Validate PR and Create Jira Task

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  validate-and-jira:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do C√≥digo do PR (com subm√≥dulos)
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Garantir que os Subm√≥dulos Est√£o Atualizados
        run: git submodule update --init --recursive

      - name: Verificar a Branch Atual (Confirma PR)
        run: git branch --show-current

      - name: Debug - Listar Arquivos na Pasta `rules`
        run: ls -R rules/

      - name: Debug - Exibir Caminho Completo do `swagger.yaml`
        run: |
          echo "Listando arquivos no diret√≥rio atual:"
          ls -lah
          echo "Procurando por swagger.yaml:"
          find $(pwd) -name "swagger.yaml"

      - name: Garantir Permiss√µes de Leitura no `swagger.yaml`
        run: chmod +r swagger.yaml || true

      - name: Instalar Depend√™ncias do Go
        run: |
          go mod init validator || true
          go mod tidy
          go get github.com/pb33f/libopenapi

      - name: Rodar PB33F e gerar relat√≥rio usando `rules/validator.go`
        run: |
          echo "üîç Buscando swagger.yaml..."
          if [ ! -f "swagger.yaml" ]; then
            echo "‚ùå Arquivo swagger.yaml n√£o encontrado na vers√£o do PR!"
            exit 1
          fi

          if [ ! -f "rules/validator.go" ]; then
            echo "‚ùå Arquivo validator.go n√£o encontrado em rules/!"
            exit 1
          fi

          echo "‚úÖ Arquivo encontrado: swagger.yaml"
          echo "üü¢ Executando valida√ß√£o PB33F..."

          go run rules/validator.go swagger.yaml > pb33f_report.txt 2>&1 || true

          echo "‚úÖ PB33F finalizado com sucesso!"

      - name: Instalar Spectral para valida√ß√£o OpenAPI
        run: npm install -g @stoplight/spectral-cli

      - name: Rodar Spectral e gerar relat√≥rio usando `rules/spectral_rules.yaml`
        run: |
          if [ ! -f "swagger.yaml" ]; then
            echo "‚ùå Arquivo swagger.yaml n√£o encontrado na vers√£o do PR!"
            exit 1
          fi

          if [ ! -f "rules/spectral_rules.yaml" ]; then
            echo "‚ùå Arquivo de regras do Spectral n√£o encontrado!"
            exit 1
          fi

          echo "‚úÖ Arquivo encontrado: swagger.yaml"
          spectral lint swagger.yaml --ruleset rules/spectral_rules.yaml > spectral_report.txt 2>&1 || true

          echo "‚úÖ Spectral finalizado com sucesso! Erros e warnings foram salvos no relat√≥rio."

      - name: Instalar Vale CLI para valida√ß√£o de documenta√ß√£o
        run: |
          echo "üîΩ Baixando e instalando Vale CLI..."
          VALE_VERSION=$(curl -s https://api.github.com/repos/errata-ai/vale/releases/latest | jq -r .tag_name)
          curl -L -o vale.tar.gz "https://github.com/errata-ai/vale/releases/download/$VALE_VERSION/vale_${VALE_VERSION:1}_Linux_64-bit.tar.gz"
          tar -xzf vale.tar.gz
          sudo mv vale /usr/local/bin/
          vale --version

      - name: Rodar Vale CLI e gerar relat√≥rio usando `rules/.vale.ini`
        run: |
          if [ ! -f "swagger.yaml" ]; then
            echo "‚ùå Arquivo swagger.yaml n√£o encontrado na vers√£o do PR!"
            exit 1
          fi

          if [ ! -f "rules/.vale.ini" ]; then
            echo "‚ùå Arquivo de configura√ß√£o .vale.ini n√£o encontrado!"
            exit 1
          fi

          echo "‚úÖ Arquivo encontrado: swagger.yaml"
          vale --config rules/.vale.ini "swagger.yaml" > vale_report.txt || true

      - name: Upload de Relat√≥rios de Valida√ß√£o no GitHub
        uses: actions/upload-artifact@v4
        with:
          name: validation-reports
          path: |
            pb33f_report.txt
            spectral_report.txt
            vale_report.txt
